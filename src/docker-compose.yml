version: '3.4'

services:
  rabbitmq:
    image: rabbitmq:3

  botnetjobs.api:
    image: ${DOCKER_REGISTRY-}botnetjobsapi
    environment:
      rabbitmq__Hostname: rabbitmq
    build:
      context: .
      dockerfile: Services/BotnetJobs/BotnetJobs.API/Dockerfile
    depends_on:
      - rabbitmq

  bots.api:
    image: ${DOCKER_REGISTRY-}botsapi
    environment:
      rabbitmq__Hostname: rabbitmq
    build:
      context: .
      dockerfile: Services/Bots/Bots.API/Dockerfile
    depends_on:
      - rabbitmq
  
  botnetwapp:
    image: botnetwapp
    container_name: botnetwapp
    build:
      context: .
      dockerfile: BotnetWebApp/botnetwebapp/Dockerfile
    stdin_open: true
    ports:
      - 3001:3000
    volumes:
      - './BotnetWebApp/botnetwebapp:/app'
      - '/app/node_modules'
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - botnetjobs.api
      - bots.api

  bot1:
    image: bot1
    container_name: bot1
    build:
      context: .
      dockerfile: Bots/client/Dockerfile
    volumes:
      - '.:/code'
    environment:
      BOTNET_ID: 1
      BOT_ID: 1
      RABBITMQ_HOSTNAME: rabbitmq
      BOTNETJOBS_ADDRESS: botnetjobs.api
      BOTS_ADDRESS: bots.api
    depends_on:
      - rabbitmq
      - botnetjobs.api
      - bots.api

  bot2:
    image: bot2
    container_name: bot2
    build:
      context: .
      dockerfile: Bots/client/Dockerfile
    volumes:
      - '.:/code'
    environment:
      BOTNET_ID: 1
      BOT_ID: 2
      RABBITMQ_HOSTNAME: rabbitmq
      BOTNETJOBS_ADDRESS: botnetjobs.api
      BOTS_ADDRESS: bots.api
    depends_on:
      - rabbitmq
      - botnetjobs.api
      - bots.api

